/*******************************************************************************************************************************//**
 *
 * @file		swhandler.h
 * @brief		Clase virtual pura. Esta clase debe ser heredada por las clases que se tienen que enganchar del Systick Timer
 * @date		4 may. 2022
 * @author		Ing. Marcelo Trujillo
 *
 **********************************************************************************************************************************/
#ifndef CALLBACK_H_
#define CALLBACK_H_

/***********************************************************************************************************************************
 *** INCLUDES GLOBALES
 **********************************************************************************************************************************/
using namespace std;

/***********************************************************************************************************************************
 *** DEFINES GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** MACROS GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** IMPLANTACION DE LA CLASE
 **********************************************************************************************************************************/
class Callback
{
	private:
		void (*m_CallBack)( void );

	public:

		Callback(void (*CallBack)(void) = nullptr);
		/*Este método debe ser implementado por las clases
		derivadas cada una resolverá que hacer con su Irq
		enganchada al  systick del sistema	*/
		virtual void callback( void );

		virtual ~Callback( );
};

#endif /* CALLBACK_H_ */
